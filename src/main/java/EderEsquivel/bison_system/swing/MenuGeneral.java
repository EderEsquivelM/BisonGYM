/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package EderEsquivel.bison_system.swing;

import java.awt.Color;
import javax.swing.JOptionPane;

/**
 *
 * @author edere
 */
public class MenuGeneral extends javax.swing.JFrame {

    /**
     * Creates new form MenuGeneral
     */
    public MenuGeneral() {
        initComponents();
        this.setResizable(false);
        this.setSize(1100, 700);
        this.setLocationRelativeTo(null);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dpFondo = new javax.swing.JDesktopPane();
        menuPrincipal = new javax.swing.JMenuBar();
        menuConfiguracion = new javax.swing.JMenu();
        cbxmiModoOscuro = new javax.swing.JCheckBoxMenuItem();
        miCerrarSesion = new javax.swing.JMenuItem();
        miSalir = new javax.swing.JMenuItem();
        menuPefil = new javax.swing.JMenu();
        miInformacion = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        miEstadiscticas = new javax.swing.JMenuItem();
        menuEntrenamientos = new javax.swing.JMenu();
        miAnadirEntenamiento = new javax.swing.JMenuItem();
        menuEjercicios = new javax.swing.JMenu();
        miVerEjercicios = new javax.swing.JMenuItem();
        miGruposMusculares = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1000, 600));
        setSize(new java.awt.Dimension(0, 0));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        dpFondo.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout dpFondoLayout = new javax.swing.GroupLayout(dpFondo);
        dpFondo.setLayout(dpFondoLayout);
        dpFondoLayout.setHorizontalGroup(
            dpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 953, Short.MAX_VALUE)
        );
        dpFondoLayout.setVerticalGroup(
            dpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 380, Short.MAX_VALUE)
        );

        menuConfiguracion.setText("Configuracion");

        cbxmiModoOscuro.setText("Modo Oscuro");
        cbxmiModoOscuro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxmiModoOscuroActionPerformed(evt);
            }
        });
        menuConfiguracion.add(cbxmiModoOscuro);

        miCerrarSesion.setText("Cerrar Sesión");
        menuConfiguracion.add(miCerrarSesion);

        miSalir.setText("Salir");
        menuConfiguracion.add(miSalir);

        menuPrincipal.add(menuConfiguracion);

        menuPefil.setText("Perfil");

        miInformacion.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.SHIFT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        miInformacion.setText("Informacion");
        miInformacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miInformacionActionPerformed(evt);
            }
        });
        menuPefil.add(miInformacion);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.SHIFT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem4.setText("Medidas");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        menuPefil.add(jMenuItem4);

        miEstadiscticas.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.SHIFT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        miEstadiscticas.setText("Estadisticas");
        miEstadiscticas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miEstadiscticasActionPerformed(evt);
            }
        });
        menuPefil.add(miEstadiscticas);

        menuPrincipal.add(menuPefil);

        menuEntrenamientos.setText("Entrenamientos");

        miAnadirEntenamiento.setText("Añadir");
        menuEntrenamientos.add(miAnadirEntenamiento);

        menuPrincipal.add(menuEntrenamientos);

        menuEjercicios.setText("Ejercicios");

        miVerEjercicios.setText("Ejercicios");
        miVerEjercicios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miVerEjerciciosActionPerformed(evt);
            }
        });
        menuEjercicios.add(miVerEjercicios);

        miGruposMusculares.setText("Grupos Musculares");
        miGruposMusculares.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miGruposMuscularesActionPerformed(evt);
            }
        });
        menuEjercicios.add(miGruposMusculares);

        menuPrincipal.add(menuEjercicios);

        setJMenuBar(menuPrincipal);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dpFondo)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dpFondo)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
         int respuesta = JOptionPane.showConfirmDialog(
                        MenuGeneral.this,
                        "¿Estás seguro de que deseas salir?",
                        "Confirmar salida",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE);
        
        if (respuesta == JOptionPane.YES_OPTION) {
                    dispose(); // Cierra la ventana
                    System.exit(0);
        }else{
            
        }
    }//GEN-LAST:event_formWindowClosing

    private void cbxmiModoOscuroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxmiModoOscuroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxmiModoOscuroActionPerformed

    private void miInformacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miInformacionActionPerformed
        // TODO add your handling code here:
         if (ventanaInformacion == null || ventanaInformacion.isClosed()) {
            ventanaInformacion = new Informacion();
            dpFondo.add(ventanaInformacion);
            int x = (dpFondo.getWidth() - ventanaInformacion.getWidth()) / 2;
            int y = (dpFondo.getHeight() - ventanaInformacion.getHeight()) / 2;
            ventanaInformacion.setLocation(x, y);
            ventanaInformacion.setVisible(true);
        } else {
            try {
           
                ventanaInformacion.setIcon(false); // Restaurar si está minimizada
                int x = (dpFondo.getWidth() - ventanaInformacion.getWidth()) / 2;
                int y = (dpFondo.getHeight() - ventanaInformacion.getHeight()) / 2;
                ventanaInformacion.setLocation(x, y);
                ventanaInformacion.setSelected(true); // Darle foco
                ventanaInformacion.toFront(); // Al frente
            } catch (java.beans.PropertyVetoException ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_miInformacionActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        if (ventanaMedidas == null || ventanaMedidas.isClosed()) {
            ventanaMedidas = new Medidas();
            dpFondo.add(ventanaMedidas);
            int x = (dpFondo.getWidth() - ventanaMedidas.getWidth()) / 2;
            int y = (dpFondo.getHeight() - ventanaMedidas.getHeight()) / 2;
            ventanaMedidas.setLocation(x, y);
            ventanaMedidas.setVisible(true);
        } else {
            try {
           
                ventanaMedidas.setIcon(false); // Restaurar si está minimizada
                int x = (dpFondo.getWidth() - ventanaMedidas.getWidth()) / 2;
                int y = (dpFondo.getHeight() - ventanaMedidas.getHeight()) / 2;
                ventanaMedidas.setLocation(x, y);
                ventanaMedidas.setSelected(true); // Darle foco
                ventanaMedidas.toFront(); // Al frente
            } catch (java.beans.PropertyVetoException ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void miEstadiscticasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miEstadiscticasActionPerformed
        // TODO add your handling code here:
         if (ventanaEstadisticas == null || ventanaEstadisticas.isClosed()) {
            ventanaEstadisticas = new Estadisticas();
            dpFondo.add(ventanaEstadisticas);
            int x = (dpFondo.getWidth() - ventanaEstadisticas.getWidth()) / 2;
            int y = (dpFondo.getHeight() - ventanaEstadisticas.getHeight()) / 2;
            ventanaEstadisticas.setLocation(x, y);
            ventanaEstadisticas.setVisible(true);
        } else {
            try {
           
                ventanaEstadisticas.setIcon(false); // Restaurar si está minimizada
                int x = (dpFondo.getWidth() - ventanaEstadisticas.getWidth()) / 2;
                int y = (dpFondo.getHeight() - ventanaEstadisticas.getHeight()) / 2;
                ventanaEstadisticas.setLocation(x, y);
                ventanaEstadisticas.setSelected(true); // Darle foco
                ventanaEstadisticas.toFront(); // Al frente
            } catch (java.beans.PropertyVetoException ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_miEstadiscticasActionPerformed

    private void miGruposMuscularesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miGruposMuscularesActionPerformed
        // TODO add your handling code here:
        if (ventanaGM == null || ventanaGM.isClosed()) {
            ventanaGM = new GruposMusculares();
            dpFondo.add(ventanaGM);
            int x = (dpFondo.getWidth() - ventanaGM.getWidth()) / 2;
            int y = (dpFondo.getHeight() - ventanaGM.getHeight()) / 2;
            ventanaGM.setLocation(x, y);
            ventanaGM.setVisible(true);
        } else {
            try {
           
                ventanaGM.setIcon(false); // Restaurar si está minimizada
                int x = (dpFondo.getWidth() - ventanaGM.getWidth()) / 2;
                int y = (dpFondo.getHeight() - ventanaGM.getHeight()) / 2;
                ventanaGM.setLocation(x, y);
                ventanaGM.setSelected(true); // Darle foco
                ventanaGM.toFront(); // Al frente
            } catch (java.beans.PropertyVetoException ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_miGruposMuscularesActionPerformed

    private void miVerEjerciciosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miVerEjerciciosActionPerformed
        // TODO add your handling code here:
         if (ventanaCatEjercicios == null || ventanaCatEjercicios.isClosed()) {
            ventanaCatEjercicios = new CategoriasEjercicios();
            dpFondo.add(ventanaCatEjercicios);
            int x = (dpFondo.getWidth() - ventanaCatEjercicios.getWidth()) / 2;
            int y = (dpFondo.getHeight() - ventanaCatEjercicios.getHeight()) / 2;
            ventanaCatEjercicios.setLocation(x, y);
            ventanaCatEjercicios.setVisible(true);
        } else {
            try {
           
                ventanaCatEjercicios.setIcon(false); // Restaurar si está minimizada
                int x = (dpFondo.getWidth() - ventanaCatEjercicios.getWidth()) / 2;
                int y = (dpFondo.getHeight() - ventanaCatEjercicios.getHeight()) / 2;
                ventanaCatEjercicios.setLocation(x, y);
                ventanaCatEjercicios.setSelected(true); // Darle foco
                ventanaCatEjercicios.toFront(); // Al frente
            } catch (java.beans.PropertyVetoException ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_miVerEjerciciosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuGeneral.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuGeneral.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuGeneral.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuGeneral.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuGeneral().setVisible(true);
            }
        });
    }
    
    private Informacion ventanaInformacion;
    private Medidas ventanaMedidas;
    private Estadisticas ventanaEstadisticas;
    private GruposMusculares ventanaGM;
    private CategoriasEjercicios ventanaCatEjercicios;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBoxMenuItem cbxmiModoOscuro;
    private javax.swing.JDesktopPane dpFondo;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenu menuConfiguracion;
    private javax.swing.JMenu menuEjercicios;
    private javax.swing.JMenu menuEntrenamientos;
    private javax.swing.JMenu menuPefil;
    private javax.swing.JMenuBar menuPrincipal;
    private javax.swing.JMenuItem miAnadirEntenamiento;
    private javax.swing.JMenuItem miCerrarSesion;
    private javax.swing.JMenuItem miEstadiscticas;
    private javax.swing.JMenuItem miGruposMusculares;
    private javax.swing.JMenuItem miInformacion;
    private javax.swing.JMenuItem miSalir;
    private javax.swing.JMenuItem miVerEjercicios;
    // End of variables declaration//GEN-END:variables
}
